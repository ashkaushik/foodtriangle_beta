<<<<<<< HEAD
declare let global: NodeJS.Global;
=======
let objectTypes = {
  'boolean': false,
  'function': true,
  'object': true,
  'number': false,
  'string': false,
  'undefined': false
};

declare let global: NodeJS.Global;
declare let module: any;
declare let exports: any;
>>>>>>> origin/foodtriangle_node

declare module NodeJS {
  interface Global {
    window: any;
    global: any;
  }
}

<<<<<<< HEAD
/**
 * window: browser in DOM main thread
 * self: browser in WebWorker
 * global: Node.js/other
 */
export const root: any = (
     typeof window == 'object' && window.window === window && window
  || typeof self == 'object' && self.self === self && self
  || typeof global == 'object' && global.global === global && global
);

if (!root) {
  throw new Error('RxJS could not find any global context (window, self, global)');
=======
export let root: any = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);

let freeGlobal = objectTypes[typeof global] && global;
if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
  root = freeGlobal;
>>>>>>> origin/foodtriangle_node
}
