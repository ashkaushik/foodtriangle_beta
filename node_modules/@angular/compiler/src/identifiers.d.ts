import { CompileIdentifierMetadata, CompileTokenMetadata } from './compile_metadata';
export interface IdentifierSpec {
    name: string;
    moduleUrl: string;
    runtime: any;
}
export declare class Identifiers {
    static ANALYZE_FOR_ENTRY_COMPONENTS: IdentifierSpec;
<<<<<<< HEAD
    static ElementRef: IdentifierSpec;
    static NgModuleRef: IdentifierSpec;
    static ViewContainerRef: IdentifierSpec;
    static ChangeDetectorRef: IdentifierSpec;
    static QueryList: IdentifierSpec;
    static TemplateRef: IdentifierSpec;
    static CodegenComponentFactoryResolver: IdentifierSpec;
    static ComponentFactoryResolver: IdentifierSpec;
    static ComponentFactory: IdentifierSpec;
    static ComponentRef: IdentifierSpec;
    static NgModuleFactory: IdentifierSpec;
    static NgModuleInjector: IdentifierSpec;
    static RegisterModuleFactoryFn: IdentifierSpec;
    static Injector: IdentifierSpec;
    static ViewEncapsulation: IdentifierSpec;
    static ChangeDetectionStrategy: IdentifierSpec;
    static SecurityContext: IdentifierSpec;
    static LOCALE_ID: IdentifierSpec;
    static TRANSLATIONS_FORMAT: IdentifierSpec;
    static inlineInterpolate: IdentifierSpec;
    static interpolate: IdentifierSpec;
    static EMPTY_ARRAY: IdentifierSpec;
    static EMPTY_MAP: IdentifierSpec;
    static Renderer: IdentifierSpec;
    static viewDef: IdentifierSpec;
    static elementDef: IdentifierSpec;
    static anchorDef: IdentifierSpec;
    static textDef: IdentifierSpec;
    static directiveDef: IdentifierSpec;
    static providerDef: IdentifierSpec;
    static queryDef: IdentifierSpec;
    static pureArrayDef: IdentifierSpec;
    static pureObjectDef: IdentifierSpec;
    static purePipeDef: IdentifierSpec;
    static pipeDef: IdentifierSpec;
    static nodeValue: IdentifierSpec;
    static ngContentDef: IdentifierSpec;
    static unwrapValue: IdentifierSpec;
    static createRendererType2: IdentifierSpec;
    static RendererType2: IdentifierSpec;
    static ViewDefinition: IdentifierSpec;
    static createComponentFactory: IdentifierSpec;
}
export declare function assetUrl(pkg: string, path?: string, type?: string): string;
export declare function resolveIdentifier(identifier: IdentifierSpec): any;
export declare function createIdentifier(identifier: IdentifierSpec): CompileIdentifierMetadata;
export declare function identifierToken(identifier: CompileIdentifierMetadata): CompileTokenMetadata;
export declare function createIdentifierToken(identifier: IdentifierSpec): CompileTokenMetadata;
export declare function createEnumIdentifier(enumType: IdentifierSpec, name: string): CompileIdentifierMetadata;
=======
    static ViewUtils: IdentifierSpec;
    static AppView: IdentifierSpec;
    static DebugAppView: IdentifierSpec;
    static AppElement: IdentifierSpec;
    static ElementRef: IdentifierSpec;
    static ViewContainerRef: IdentifierSpec;
    static ChangeDetectorRef: IdentifierSpec;
    static RenderComponentType: IdentifierSpec;
    static QueryList: IdentifierSpec;
    static TemplateRef: IdentifierSpec;
    static TemplateRef_: IdentifierSpec;
    static CodegenComponentFactoryResolver: IdentifierSpec;
    static ComponentFactoryResolver: IdentifierSpec;
    static ComponentFactory: IdentifierSpec;
    static NgModuleFactory: IdentifierSpec;
    static NgModuleInjector: IdentifierSpec;
    static RegisterModuleFactoryFn: IdentifierSpec;
    static ValueUnwrapper: IdentifierSpec;
    static Injector: IdentifierSpec;
    static ViewEncapsulation: IdentifierSpec;
    static ViewType: IdentifierSpec;
    static ChangeDetectionStrategy: IdentifierSpec;
    static StaticNodeDebugInfo: IdentifierSpec;
    static DebugContext: IdentifierSpec;
    static Renderer: IdentifierSpec;
    static SimpleChange: IdentifierSpec;
    static UNINITIALIZED: IdentifierSpec;
    static ChangeDetectorStatus: IdentifierSpec;
    static checkBinding: IdentifierSpec;
    static flattenNestedViewRenderNodes: IdentifierSpec;
    static devModeEqual: IdentifierSpec;
    static interpolate: IdentifierSpec;
    static castByValue: IdentifierSpec;
    static EMPTY_ARRAY: IdentifierSpec;
    static EMPTY_MAP: IdentifierSpec;
    static pureProxies: {
        name: string;
        moduleUrl: string;
        runtime: <P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, R>(fn: (p0: P0, p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6, p7: P7, p8: P8, p9: P9) => R) => (p0: P0, p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6, p7: P7, p8: P8, p9: P9) => R;
    }[];
    static SecurityContext: IdentifierSpec;
    static AnimationKeyframe: IdentifierSpec;
    static AnimationStyles: IdentifierSpec;
    static NoOpAnimationPlayer: IdentifierSpec;
    static AnimationGroupPlayer: IdentifierSpec;
    static AnimationSequencePlayer: IdentifierSpec;
    static prepareFinalAnimationStyles: IdentifierSpec;
    static balanceAnimationKeyframes: IdentifierSpec;
    static clearStyles: IdentifierSpec;
    static renderStyles: IdentifierSpec;
    static collectAndResolveStyles: IdentifierSpec;
    static LOCALE_ID: IdentifierSpec;
    static TRANSLATIONS_FORMAT: IdentifierSpec;
}
export declare function resolveIdentifier(identifier: IdentifierSpec): CompileIdentifierMetadata;
export declare function identifierToken(identifier: CompileIdentifierMetadata): CompileTokenMetadata;
export declare function resolveIdentifierToken(identifier: IdentifierSpec): CompileTokenMetadata;
export declare function resolveEnumIdentifier(enumType: CompileIdentifierMetadata, name: string): CompileIdentifierMetadata;
>>>>>>> origin/foodtriangle_node
