/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'angular2-platform-node/node-http';
import * as import2 from '@angular/http/src/base_request_options';
import * as import3 from '@angular/http/src/base_response_options';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/zone/ng_zone';
import * as import6 from '@angular/common/src/location/location_strategy';
import * as import7 from 'angular2-platform-node/tokens';
import * as import8 from '@angular/http/src/interfaces';
import * as import9 from '@angular/http/src/backends/browser_xhr';
import * as import10 from '@angular/http/src/backends/xhr_backend';
import * as import11 from '@angular/http/src/http';
import * as import12 from '@angular/http/src/backends/jsonp_backend';
class NodeHttpModuleInjector extends import0.NgModuleInjector<import1.NodeHttpModule> {
  _NodeHttpModule_0:import1.NodeHttpModule;
  __XSRFStrategy_1:any;
  __BrowserXhr_2:any;
  __RequestOptions_3:import2.BaseRequestOptions;
  __ResponseOptions_4:import3.BaseResponseOptions;
  __XHRBackend_5:import1.NodeBackend;
  __Http_6:any;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _XSRFStrategy_1():any {
    if ((this.__XSRFStrategy_1 == (null as any))) { (this.__XSRFStrategy_1 = import1._noop); }
    return this.__XSRFStrategy_1;
  }
  get _BrowserXhr_2():any {
    if ((this.__BrowserXhr_2 == (null as any))) { (this.__BrowserXhr_2 = import1._noop); }
    return this.__BrowserXhr_2;
  }
  get _RequestOptions_3():import2.BaseRequestOptions {
    if ((this.__RequestOptions_3 == (null as any))) { (this.__RequestOptions_3 = new import2.BaseRequestOptions()); }
    return this.__RequestOptions_3;
  }
  get _ResponseOptions_4():import3.BaseResponseOptions {
    if ((this.__ResponseOptions_4 == (null as any))) { (this.__ResponseOptions_4 = new import3.BaseResponseOptions()); }
    return this.__ResponseOptions_4;
  }
  get _XHRBackend_5():import1.NodeBackend {
    if ((this.__XHRBackend_5 == (null as any))) { (this.__XHRBackend_5 = new import1.NodeBackend(this._ResponseOptions_4,this._BrowserXhr_2,this._XSRFStrategy_1,this.parent.get(import5.NgZone),this.parent.get(import6.APP_BASE_HREF),this.parent.get(import7.ORIGIN_URL))); }
    return this.__XHRBackend_5;
  }
  get _Http_6():any {
    if ((this.__Http_6 == (null as any))) { (this.__Http_6 = import1.httpFactory(this._XHRBackend_5,this._RequestOptions_3)); }
    return this.__Http_6;
  }
  createInternal():import1.NodeHttpModule {
    this._NodeHttpModule_0 = new import1.NodeHttpModule();
    return this._NodeHttpModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.NodeHttpModule)) { return this._NodeHttpModule_0; }
    if ((token === import8.XSRFStrategy)) { return this._XSRFStrategy_1; }
    if ((token === import9.BrowserXhr)) { return this._BrowserXhr_2; }
    if ((token === import2.RequestOptions)) { return this._RequestOptions_3; }
    if ((token === import3.ResponseOptions)) { return this._ResponseOptions_4; }
    if ((token === import10.XHRBackend)) { return this._XHRBackend_5; }
    if ((token === import11.Http)) { return this._Http_6; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const NodeHttpModuleNgFactory:import0.NgModuleFactory<import1.NodeHttpModule> = new import0.NgModuleFactory(NodeHttpModuleInjector,import1.NodeHttpModule);
class NodeJsonpModuleInjector extends import0.NgModuleInjector<import1.NodeJsonpModule> {
  _NodeJsonpModule_0:import1.NodeJsonpModule;
  __XSRFStrategy_1:any;
  __BrowserXhr_2:any;
  __RequestOptions_3:import2.BaseRequestOptions;
  __ResponseOptions_4:import3.BaseResponseOptions;
  __JSONPBackend_5:import1.NodeJsonpBackend_;
  __Jsonp_6:any;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _XSRFStrategy_1():any {
    if ((this.__XSRFStrategy_1 == (null as any))) { (this.__XSRFStrategy_1 = import1._noop); }
    return this.__XSRFStrategy_1;
  }
  get _BrowserXhr_2():any {
    if ((this.__BrowserXhr_2 == (null as any))) { (this.__BrowserXhr_2 = import1._noop); }
    return this.__BrowserXhr_2;
  }
  get _RequestOptions_3():import2.BaseRequestOptions {
    if ((this.__RequestOptions_3 == (null as any))) { (this.__RequestOptions_3 = new import2.BaseRequestOptions()); }
    return this.__RequestOptions_3;
  }
  get _ResponseOptions_4():import3.BaseResponseOptions {
    if ((this.__ResponseOptions_4 == (null as any))) { (this.__ResponseOptions_4 = new import3.BaseResponseOptions()); }
    return this.__ResponseOptions_4;
  }
  get _JSONPBackend_5():import1.NodeJsonpBackend_ {
    if ((this.__JSONPBackend_5 == (null as any))) { (this.__JSONPBackend_5 = new import1.NodeJsonpBackend_(this._ResponseOptions_4,this.parent.get(import5.NgZone),this.parent.get(import6.APP_BASE_HREF),this.parent.get(import7.ORIGIN_URL))); }
    return this.__JSONPBackend_5;
  }
  get _Jsonp_6():any {
    if ((this.__Jsonp_6 == (null as any))) { (this.__Jsonp_6 = import1.jsonpFactory(this._JSONPBackend_5,this._RequestOptions_3)); }
    return this.__Jsonp_6;
  }
  createInternal():import1.NodeJsonpModule {
    this._NodeJsonpModule_0 = new import1.NodeJsonpModule();
    return this._NodeJsonpModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.NodeJsonpModule)) { return this._NodeJsonpModule_0; }
    if ((token === import8.XSRFStrategy)) { return this._XSRFStrategy_1; }
    if ((token === import9.BrowserXhr)) { return this._BrowserXhr_2; }
    if ((token === import2.RequestOptions)) { return this._RequestOptions_3; }
    if ((token === import3.ResponseOptions)) { return this._ResponseOptions_4; }
    if ((token === import12.JSONPBackend)) { return this._JSONPBackend_5; }
    if ((token === import11.Jsonp)) { return this._Jsonp_6; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const NodeJsonpModuleNgFactory:import0.NgModuleFactory<import1.NodeJsonpModule> = new import0.NgModuleFactory(NodeJsonpModuleInjector,import1.NodeJsonpModule);